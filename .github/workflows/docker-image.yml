name: Docker Image CI

on:
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: install docker
      run: |
        for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    - name: check if nginx alpine docker image update
      env:
        docker_hub_token: ${{ secrets.DOCKER_HUB_TOKEN }}
      run: |
        docker pull nginx:alpine
        cur_version=`docker run --rm nginx:alpine nginx -v 2>&1 | grep version | awk -F/ '{print $2}'`
        echo $cur_version
        docker login -u wisonic -p ${docker_hub_token}
        docker pull wisonic/nginx-geoip2
        old_version=`docker run --rm wisonic/nginx-geoip2 nginx -v 2>&1 | grep version | awk -F/ '{print $2}'`
        echo $old_version
        if [ "$cur_version" = "$old_version" ];then
          echo "eeeeeeeeeeeeeeeeeeeeeeee"
        else
          echo "nnnnnnnnnnnnnnnnnnnnnnnn"
        fi
